import os
import tkinter as tkinter
from tkinter import filedialog
import subprocess
from PIL import Image

class Window:
    def __init__(self):
        self.root = tkinter.Tk()
        self.root.title("Malware Analysis")
        self.root.geometry('500x500')
        self.root.resizable(0,0)
        self.path = os.path.dirname(os.path.abspath(__file__))
        pass

    def OpenFile(self, dir):
        name = filedialog.askopenfilename(initialdir=dir,
                               filetypes=(("Text File", "*.txt"), ("All Files", "*.*")),
                               title="Choose a file."
                               )
        print(name)
        # Using try in case user types in unknown file or closes without choosing a file.
        try:
            with open(name, 'r') as UseFile:
                pass
                #print(UseFile.read())
        except:
            print("No file exists")
        return name

    def ParseCommand(self):
        # Get the name of the malware and call batch file and wait
        self.label.config(text="Processing...")
        self.label.update()

        malwarename = self.textbox.get()
        batchfilepath = os.path.join(str(self.path), "MalwareFamilyAnalysis.bat")
        runcommand = batchfilepath + " " + malwarename
        print(runcommand)

        #TODO Uncomment below line to call subprocess
        batchprocess = subprocess.call(runcommand)

        #Wait for the subprocess to finish
        #Open a new window and display the result
        self.label.config(text="Processing Done")
        self.label.update()

        import time
        time.sleep(2)

        #open the file and display the graph
        # self.button3 = tkinter.Button(self.root, text="Select File", command=filedialog.askopenfilename())
        # self.button3.pack()

        self.label.config(text="Open the newly Created Output File.")
        self.label.update()

        outputFilename = self.OpenFile(self.path)

        #outputFilename = 'program_output_BCKP4.txt'
        outputImageName = 'MalwareNetwork.png'

        import ParseOutputFile as pof

        pofObj = pof.ParseOutput()
        pofObj.ParseOutputFile(outputFilename, outputImageName)

        print("Done")

        #Display the output image

        import sys
        if sys.platform == 'win32':
            os.system('start ./' + outputImageName)
            pass
        elif sys.platform == 'darwin':
            img = Image.open(outputImageName)
            img.show()
        else:
            pass


        #self.root.destroy()


        pass

    def AddLabel(self, text):
        self.label = tkinter.Label(self.root, text=text)
        self.label.pack()
        pass

    def AddButton(self, name, command):
        self.parseButton = tkinter.Button(self.root, text=name, command=command)
        self.parseButton.pack()
        pass

    def AddEditText(self):
        self.textbox = tkinter.Entry(self.root)
        self.textbox.pack()

    def MainLoop(self):
        self.root.mainloop()


def main():
    gui = Window()
    gui.AddLabel("Enter the name of Malware..!!")
    gui.AddEditText()
    parseCommand = gui.ParseCommand
    gui.AddButton("Parse", parseCommand)
    gui.MainLoop()

    #Open the file and generate the graph


if __name__ == "__main__":
    main()
